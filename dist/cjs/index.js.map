{"version":3,"file":"index.js","mappings":";;;;;;;;;;;AAAA,MAAMA,QAAQ,GAAG,CAACC,EAA4B,EAAEC,IAAY,KAAI;EAC9D,IAAIC,OAAO,GAAyC,IAAI;EAExD,OAAO,CAAC,GAAGC,IAAW,KAAI;IACxB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrC,IAAIJ,OAAO,KAAK,IAAI,EAAE;QACpB,OAAOG,OAAO,CAAC,IAAI,CAAC;;MAEtBH,OAAO,GAAGK,UAAU,CAAC,MAAK;QACxBL,OAAO,GAAG,IAAI;QACd,IAAI;UACFG,OAAO,CAACL,EAAE,CAAC,GAAGG,IAAI,CAAC,CAAC;SACrB,CAAC,OAAOK,KAAK,EAAE;UACdF,MAAM,CAACE,KAAK,CAAC;;MAEjB,CAAC,EAAEP,IAAI,CAAC;IACV,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AACDQ,gBAAgB,GAAGV,QAAQ;AAE3B,MAAMW,QAAQ,GAAG,CAACV,EAA4B,EAAEC,IAAY,KAAI;EAC9D,IAAIC,OAAO,GAAyC,IAAI;EAExD,OAAO,CAAC,GAAGC,IAAW,KAAI;IACxB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrC,IAAIJ,OAAO,EAAE;QACXS,YAAY,CAACT,OAAO,CAAC;;MAEvBA,OAAO,GAAGK,UAAU,CAAC,MAAK;QACxB,IAAI;UACFF,OAAO,CAACL,EAAE,CAAC,GAAGG,IAAI,CAAC,CAAC;SACrB,CAAC,OAAOK,KAAK,EAAE;UACdF,MAAM,CAACE,KAAK,CAAC;;MAEjB,CAAC,EAAEP,IAAI,CAAC;IACV,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AACDQ,gBAAgB,GAAGC,QAAQ,C","sources":["webpack://throttle-debounce/./src/index.ts"],"sourcesContent":["const throttle = (fn: (...args: any[]) => void, wait: number) => {\n  let timerId: ReturnType<typeof setTimeout> | null = null;\n  /* eslint @typescript-eslint/no-explicit-any: 0 */\n  return (...args: any[]) => {\n    return new Promise((resolve, reject) => {\n      if (timerId !== null) {\n        return resolve(null);\n      }\n      timerId = setTimeout(() => {\n        timerId = null;\n        try {\n          resolve(fn(...args));\n        } catch (error) {\n          reject(error);\n        }\n      }, wait);\n    });\n  };\n};\nexports.throttle = throttle;\n\nconst debounce = (fn: (...args: any[]) => void, wait: number) => {\n  let timerId: ReturnType<typeof setTimeout> | null = null;\n  /* eslint @typescript-eslint/no-explicit-any: 0 */\n  return (...args: any[]) => {\n    return new Promise((resolve, reject) => {\n      if (timerId) {\n        clearTimeout(timerId);\n      }\n      timerId = setTimeout(() => {\n        try {\n          resolve(fn(...args));\n        } catch (error) {\n          reject(error);\n        }\n      }, wait);\n    });\n  };\n};\nexports.debounce = debounce;\n"],"names":["throttle","fn","wait","timerId","args","Promise","resolve","reject","setTimeout","error","exports","debounce","clearTimeout"],"sourceRoot":""}